
More documentation can be found in the doc/ directory or at http://www.recoll.org


                               Recoll user manual

  Jean-Francois Dockes

   <jean-francois.dockes@wanadoo.fr>

   Copyright (c) 2005 Jean-Francois Dockes

   This document introduces full text search notions and describes the
   installation and use of the Recoll application.

   [ Split HTML / Single HTML ]

     ----------------------------------------------------------------------

   Table of Contents

   1. Introduction

                1.1. Giving it a try

                1.2. Full text search

                1.3. Recoll overview

   2. Indexing

                2.1. Introduction

                2.2. Index storage

                             2.2.1. Security aspects

                2.3. The indexing configuration

                2.4. Starting indexing

                2.5. Using cron to automate indexing

   3. Search

                3.1. Simple search

                3.2. The result list

                             3.2.1. The result list right-click menu

                3.3. The preview window

                3.4. Complex/advanced search

                3.5. Multiple databases

                3.6. Document history

                3.7. Sorting search results

                3.8. Search tips, shortcuts

                3.9. Customising the search interface

   4. Installation

                4.1. Installing a prebuilt copy

                             4.1.1. Installing through a package system

                             4.1.2. Installing a prebuilt Recoll

                4.2. Packages needed for external file types

                4.3. Building from source

                             4.3.1. Prerequisites

                             4.3.2. Building

                             4.3.3. Installation

                4.4. Configuration overview

                             4.4.1. Main configuration file

                             4.4.2. The mimemap file

                             4.4.3. The mimeconf file

     ----------------------------------------------------------------------

                            Chapter 1. Introduction

1.1. Giving it a try

   If you do not like reading manuals (who does?) and would like to give
   Recoll a try, just perform installation and start the recoll user
   interface, which will index your home directory by default, allowing you
   to search immediately after indexing completes.

   Do not do this if your home directory contains a huge number of documents
   and you do not want to wait or are very short on disk space. In this case,
   you may want to edit the configuration file first to restrict the indexed
   area.

   Also be aware that you may need to install the appropriate supporting
   applications for document types that need them (for example antiword for
   ms-word files).

     ----------------------------------------------------------------------

1.2. Full text search

   Recoll is a full text search application. Full text search applications
   let you find your data by content rather than by external attributes (like
   a file name). More specifically, they will let you specify words (terms)
   that should or should not appear in the text you are looking for, and
   return a list of matching documents, ordered so that the most relevant
   documents will appear first.

   You do not need to remember in what file or email message you stored a
   given piece of information. You just ask for related terms, and the tool
   will return a list of documents where those terms are prominent, in a
   similar way to internet search engines.

   Recoll tries to determine which documents are most relevant to the search
   terms you provide. Computer algorithms for determining relevance can be
   very complex, and in general are inferior to the power of the human mind
   to rapidly determine relevance. The quality of relevance guessing by the
   search tool is probably the most important element for a search
   application.

   In many cases, you are looking for all the forms of a word, not for a
   specific form or spelling. These different forms may include plurals,
   different tenses for a verb, or terms derived from the same root or stem
   (exemple: floor, floors, floored, floorings...). Recoll will by default
   expand queries to all such related terms (words that reduce to the same
   stem). This expansion can be disabled at search time.

   Stemming, by itself, does not accomodate for misspellings or phonetic
   searches. Recoll currently does not support these features.

     ----------------------------------------------------------------------

1.3. Recoll overview

   Recoll uses the Xapian information retrieval library as its storage and
   retrieval engine. Xapian is a very mature package using a sophisticated
   probabilistic ranking model. Recoll provides the interface to get data
   into (indexing) and out (searching) of the system.

   In practice, Xapian works by remembering where terms appear in your
   document files. The acquisition process is called indexing.

   The resulting index can be big (roughly the size of the original document
   set), but it is not a document archive. Recoll can only display documents
   that still exist at the place from which they were indexed. (Actually,
   there is a way to reconstruct a document from the information in the
   index, but the result is not nice, as all formatting, punctuation and
   capitalisation are lost).

   Recoll stores all internal data in Unicode UTF-8 format, and it can index
   files with different character sets, encodings, and languages into the
   same index. It has input filters for many document types.

   Stemming depends on the document language. Recoll stores the unstemmed
   versions of terms and uses auxiliary databases for term expansion. It can
   switch stemming languages, or add a language, without reindexing. Storing
   documents in different languages in the same index is possible, and useful
   in practice, but does introduce possibilities of confusion. Recoll
   currently makes no attempt at automatic language recognition.

   Recoll has many parameters which define exactly what to index, and how to
   classify and decode the source documents. These are kept in a
   configuration file. A default configuration is copied into a standard
   location (usually something like /usr/[local/]share/recoll/examples)
   during installation. The default parameters from this file may be
   overriden by values that you set inside your personal configuration, found
   by default in the .recoll subdirectory of your home directory. The default
   configuration will index your home directory with default parameters and
   should be sufficient for giving Recoll a try, but you may want to adjust
   it later.

   Indexing is started automatically the first time you execute the recoll
   search graphical user interface, or by executing the recollindex command.

   Searches are performed inside the recoll program, which has many options
   to help you find what you are looking for.

     ----------------------------------------------------------------------

                              Chapter 2. Indexing

2.1. Introduction

   Indexing is the process by which the set of documents is analyzed and the
   data entered into the database. Recoll indexing is normally incremental:
   documents will only be processed if they have been modified. On the first
   execution, of course, all documents will need processing. A full index
   build can be forced later on by specifying an option to the indexing
   command (recollindex -z).

   Recoll indexing takes place at discrete times. There is currently no
   interface to real time file modification monitors. The typical usage is to
   have a nightly indexing run programmed into your cron file.

   +------------------------------------------------------------------------+
   | There is nothing in Recoll and Xapian that would prevent interfacing   |
   | with a real time file modification monitor, but this would tend to     |
   | consume significant system resources for dubious gain, because you     |
   | rarely need a full text search to find documents you just modified.    |
   | recollindex -i can be used to add individual files to the index if you |
   | want to play with this, see the manual page.                           |
   +------------------------------------------------------------------------+

   Recoll knows about quite a few different document types. The parameters
   for document types recognition and processing are set in configuration
   files Most file types, like HTML or word processing files, only hold one
   document. Some file types, like mail folder files can hold many
   individually indexed documents.

   Recoll indexing processes plain text, HTML, openoffice and e-mail files
   internally. Other types (ie: postscript, pdf, ms-word, rtf) need external
   applications for preprocessing. The list is in the installation section.

   Without further configuration, Recoll will index all appropriate files
   from your home directory, with a reasonable set of defaults.

   In some cases, it may be interesting to index different areas of the file
   system to separate databases. You can do this by using multiple
   configuration directories, each indexing a file system area to a specific
   database. You would use the RECOLL_CONFDIR environment variable or the -c
   confdir option to recollindex to indicate which configuration to process.
   The recoll search program can use any selection of the existing databases
   for each search, this is configurable inside the user interface.

     ----------------------------------------------------------------------

2.2. Index storage

   The default location for the index data is the $HOME/.recoll/xapiandb/
   directory. This can be changed by setting the RECOLL_CONFDIR environment
   variable, or by specifying the dbdir parameter in the configuration file
   (see the configuration section).

   The size of the index is determined by the size of the set of documents,
   but the ratio can vary a lot. For a typical mixed set of documents, the
   index size will often be close to the data set size. In specific cases (a
   set of compressed mbox files for example), the index can become much
   bigger than the documents. It may also be much smaller if the documents
   contain a lot of images or other non-indexed data (an extreme example
   being a set of mp3 files where only the tags would be indexed).

   Of course, images, sound and video do not increase the index size, which
   means that it will be quite typical nowadays (2006), that even a big index
   will be negligible against the total amount of data on the computer.

   The index data directory (xapiandb) only contains data that will be
   rebuilt by an index run, and it can always be destroyed safely.

     ----------------------------------------------------------------------

  2.2.1. Security aspects

   The Recoll index does not hold copies of the indexed documents. But it
   does hold enough data to allow for an almost complete reconstruction. If
   confidential data is indexed, access to the database directory should be
   restricted.

   As of version 1.4, Recoll will create the configuration directory with a
   mode of 0700 (access by owner only). As the index data directory is by
   default a subdirectory of the configuration directory, this should result
   in appropriate protection.

   If you use another setup, you should think of the kind of protection you
   need for your index, and set the directory and files access modes
   appropriately.

     ----------------------------------------------------------------------

2.3. The indexing configuration

   Values set in the system-wide configuration file (named like
   /usr/[local/]share/recoll/examples/recoll.conf) can be overriden by those
   set in the personal one, named $HOME/.recoll/recoll.conf by default or
   $RECOLL_CONFDIR/recoll.conf if RECOLL_CONFDIR is set.

   The most accurate documentation for editing the file is given by comments
   inside the central one. If you want to adjust the configuration before
   indexing, just click Cancel when the program asks if it should start
   initial indexing. This will have created a .recoll directory containing
   empty configuration files.

   The configuration is also documented inside the installation chapter of
   this document, or in the recoll.conf(5) man page.

   The applications needed to index file types other than text, html or email
   (ie: pdf, postscript, ms-word...) are described in the external packages
   section

     ----------------------------------------------------------------------

2.4. Starting indexing

   Indexing is performed either by the recollindex program, or by the
   indexing thread inside the recoll program (use the File menu). Both
   programs will use of the RECOLL_CONFDIR variable or accept a -c confdir
   option to specify the configuration directory to be used.

   If the recoll program finds no index when it starts, it will automatically
   start indexing (except if cancelled).

   It is best to avoid interrupting the indexing process, as this may
   sometimes leave the index in a bad state. This is not a serious problem,
   as you then just need to clear everything and restart the indexing: the
   index files are normally stored in the $HOME/.recoll/xapiandb directory,
   which you can just delete if needed. Alternatively, you can start
   recollindex with option -z, which will reset the database before indexing.

     ----------------------------------------------------------------------

2.5. Using cron to automate indexing

   The most common way to set up indexing is to have a cron task execute it
   every night. For example the following crontab entry would do it every day
   at 3:30AM (supposing recollindex is in your PATH):

 30 3 * * * recollindex > /tmp/recolltrace 2>&1

   The usual command to edit your crontab is crontab -e (which will usually
   start the vi editor to edit the file). You may have more sophisticated
   tools available on your system.

     ----------------------------------------------------------------------

                               Chapter 3. Search

   The recoll program provides the user interface for searching. It is based
   on the QT library.

     ----------------------------------------------------------------------

3.1. Simple search

    1. Start the recoll program.

    2. Possibly choose a search mode: Any term or All terms or File name.

    3. Enter search term(s) in the text field at the top of the window.

    4. Click the Search button or hit the Enter key to start the search.

   The initial default search mode is Any term. This will look for documents
   with any of the search terms (the ones with more terms will get better
   scores). All terms will ensure that only documents with all the terms will
   be returned. File name will specifically look for file names, and allows
   using wildcards (*, ? , []).

   You can search for exact phrases (adjacent words in a given order) by
   enclosing the input inside double quotes. Ex: "virtual reality".

   Character case has no influence on search, except that you can disable
   stem expansion for any term by capitalizing it. Ie: a search for floor
   will also normally look for flooring, floored, etc., but a search for
   Floor will only look for floor, in any character case (stemming can also
   be disabled globally in the preferences).

   Recoll remembers the last few searches that you performed. You can use the
   simple search text entry widget (a combobox) to recall them (click on the
   thing at the right of the text field). Please note, however, that only the
   search texts are remembered, not the mode (all/any/filename).

   Hitting ^Tab (Ctrl + Tab) while entering a word in the simple search entry
   will open a window with possible completions for the word. The completions
   are extracted from the database.

   Double-clicking on a word in the result list or a preview window will
   insert it into the simple search entry field.

   You can use the Tools / Advanced search dialog for more complex searches.

     ----------------------------------------------------------------------

3.2. The result list

   After starting a search, a list of results will instantly be displayed in
   the main list window.

   By default, the document list is presented in order of relevance (how well
   the system estimates that the document matches the query). You can specify
   a different ordering by using the Tools / Sort parameters dialog.

   Clicking on the Preview link for an entry will open an internal preview
   window for the document. Clicking the Edit link will attempt to start an
   external viewer (have a look at the mimeconf configuration file to see how
   these are configured).

   The Preview and Edit edit links may not be present for all entries,
   meaning that Recoll has no configured way to preview a given file type
   (which was indexed by name only), or no configured external viewer for the
   file type. This can sometimes be adjusted simply by tweaking the mimemap
   and mimeconf configuration files.

   You can click on the Query details link at the top of the results page to
   see the query actually performed, after stem expansion and other
   processing.

   Double-clicking on any word inside the result list or a preview window
   will insert it into the simple search text.

   The result list is divided into pages (the size of which you can change in
   the preferences). Use the arrow buttons in the toolbar or the links at the
   bottom of the page to browse the results.

     ----------------------------------------------------------------------

  3.2.1. The result list right-click menu

   Apart from the preview and edit links, you can display a popup menu by
   right-clicking over a paragraph in the result list. This menu has the
   following entries:

     * Preview

     * Edit

     * Copy File Name

     * Copy Url

     * Find similar

   The Preview and Edit entries do the same thing as the corresponding links.
   The two following entries will copy either an url or the file path to the
   clipboard, for pasting into another application.

   The Find similar entry will select a number of relevant term from the
   current document and enter them into the simple search field. You can then
   start a simple search, with a good chance of finding documents related to
   the current result.

     ----------------------------------------------------------------------

3.3. The preview window

   The preview window opens when you first click a Preview link inside the
   result list.

   Subsequent preview requests for a given search open new tabs in the
   existing window.

   Starting another search and requesting a preview will create a new preview
   window. The old one stays open until you close it.

   You can close a preview tab by typing ^W (Ctrl + W) in the window. Closing
   the last tab for a window will also close the window.

   Of course you can also close a preview window by using the window manager
   button in the top of the frame.

   You can display successive or previous documents from the result list
   inside a preview tab by typing Shift+Down or Shift+Up (Down and Up are the
   arrow keys).

   The preview tabs have an internal incremental search function. You
   initiate the search either by typing a / (slash) inside the text area or
   by clicking into the Search for: text field and entering the search
   string. You can then use the Next and Previous buttons to find the
   next/previous occurence. You can also type F3 inside the text area to get
   to the next occurrence.

   If you have a search string entered and you use ^Up/^Down to browse the
   results, the search is initiated for each successive document. If the
   string is found, the cursor will be positionned at the first occurrence of
   the search string.

     ----------------------------------------------------------------------

3.4. Complex/advanced search

   The advanced search dialog has fields that will allow a more refined
   search, looking for documents with all given elements, a given exact
   phrase, none of the given elements, or a given file name (with wildcard
   expansion). All relevant fields will be combined by an implicit AND
   clause. All fields except "Exact phrase" can accept a mix of single words
   and phrases enclosed in double quotes.

   Advanced search will let you search for documents of specific mime types
   (ie: only text/plain, or text/html or application/pdf etc...). The state
   of the file type selection can be saved as the default (the file type
   filter will not be activated at program startup, but the lists will be in
   the restored state).

   You can also restrict the search results to a subtree of the indexed area.
   If you need to do this often, you may think of setting up multiple indexes
   instead, as the performance will be much better.

   Click on the Start Search button in the advanced search dialog, or type
   Enter in any text field to start the search. The button in the main window
   always performs a simple search.

   Click on the Show query details link at the top of the result page to see
   the query expansion.

     ----------------------------------------------------------------------

3.5. Multiple databases

   Multiple Recoll databases or indexes can be created by using several
   configuration directories which are usually set to index different areas
   of the file system. A specific index can be selected for updating or
   searching, using the RECOLL_CONFDIR environment variable or the -c option
   to recoll and recollindex.

   A recollindex program instance can only update one specific index.

   A recoll program instance is also associated with a specific index, which
   is the one to be updated by its indexing thread, but it can use any number
   of Recoll indexes for searching. The external indexes can be selected
   through the external indexes tab in the preferences dialog.

   Index selection is performed in two phases. A set of all usable indexes
   must first be defined, and then the subset of indexes to be used for
   searching. Of course, these parameters are retained across program
   executions (there are kept separately for each Recoll configuration). The
   set of all indexes is usually quite stable, while the active ones might
   typically be adjusted quite frequently.

   The main index (defined by RECOLL_CONFDIR) is always active. If this is
   undesirable, you can set up your base configuration to index an empty
   directory.

   As building the set of all indexes can be a little tedious when done
   through the user interface, you can use the RECOLL_EXTRA_DBS environment
   variable to provide an initial set. This might typically be set up by a
   system administrator so that every user does not have to do it. The
   variable should define a colon-separated list of index directories, ie:

 export RECOLL_EXTRA_DBS=/some/place/xapiandb:/some/other/db

   A typical usage scenario for the multiple index feature would be for a
   system administrator to set up a central index for shared data, that you
   may choose to search, or not, in addition to your personal data. Of
   course, there are other possibilities. There are many cases where you know
   the subset of files that you want to be searched for a given query, and
   where restricting the query will much improve the precision of the
   results. This can also be performed with the directory filter in advanced
   search, but multiple indexes will have much better performance and may be
   worth the trouble.

     ----------------------------------------------------------------------

3.6. Document history

   Documents that you actually view (with the internal preview or an external
   tool) are entered into the document history, which is remembered. You can
   display the history list by using the Tools/Doc History menu entry.

     ----------------------------------------------------------------------

3.7. Sorting search results

   The documents in a result list are normally sorted in order of relevance.
   It is possible to specify different sort parameters by using the Sort
   parameters dialog (located in the Tools menu).

   The tool sorts a specified number of the most relevant documents in the
   result list, according to specified criteria. The currently available
   criteria are date and mime type.

   The sort parameters stay in effect until they are explicitely reset, or
   the program exits. An activated sort is indicated in the result list
   header.

     ----------------------------------------------------------------------

3.8. Search tips, shortcuts

   Disabling stem expansion. Entering a capitalized word in any search field
   will prevent stem expansion (no search for gardening if you enter Garden
   instead of garden). This is the only case where character case should make
   a difference for a Recoll search.

   Phrases. A phrase can be looked for by enclosing it in double quotes.
   Example: "user manual" will look only for occurrences of user immediately
   followed by manual. You can use the This exact phrase field of the
   advanced search dialog to the same effect. Phrases can be entered along
   simple terms in all search entry fields (except This exact phrase).

   AutoPhrases. This option can be set in the preferences dialog. If it is
   set, a phrase will be automatically built and added to simple searches
   when looking for Any terms. This will not change radically the results,
   but will give a relevance boost to the results where the search terms
   appear as a phrase. Ie: searching for virtual reality will still find all
   documents where either virtual or reality or both appear, but those which
   contain virtual reality should appear sooner in the list.

   Term completion. Typing ^TAB (Control + Tab) in the simple search entry
   field while entering a word will either complete the current word if its
   beginning matches a unique term in the index, or open a window to propose
   a list of completions

   Picking up new terms for search from displayed documents. Double-clicking
   on a word in the result list or in a preview window will copy it to the
   simple search entry field.

   Finding related documents. Selecting the Find similar documents entry in
   the result list paragraph right-click menu will select a set of
   "interesting" terms from the current result, and insert them into the
   simple search entry field. You can then possibly edit the list and start a
   search to find documents which may be apparented to the current result.

   Query explanation. You can get an exact description of what the query
   looked for, including stem expansion, and boolean operators used, by
   clicking on the result list header.

   File names. File names are added as terms during indexing, and you can
   specify them as ordinary terms in normal search fields (Recoll used to
   index all directories in the file path as terms. This has been abandonned
   as it did not seem really useful). Alternatively, you can use the specific
   file name search which will only look for file names and can use wildcard
   expansion.

   Quitting. Entering ^Q almost anywhere will close the application.

   Closing previews. Entering Esc will close the preview window and all its
   tabs. Entering ^W in a tab will close it (and, for the last tab, close the
   preview window).

   List browsing in preview. Entering Shift-Down or Shift-Up (Shift + an
   arrow key) in a preview window will display the next or the previous
   document from the result list. Any secondary search currently active will
   be executed on the new document.

     ----------------------------------------------------------------------

3.9. Customising the search interface

   It is possible to customise some aspects of the search interface by using
   Query configuration entry in the Preferences menu.

   There are two tabs in the dialog, dealing with the interface itself, and
   with the parameters used for searching and returning results.

   User interface parameters:

     * Number of results in a result page

     * Result list font: There is quite a lot of information shown in the
       result list, and you may want to customise the font and/or font size.
       The rest of the fonts used by Recoll are determined by your generic QT
       config (try the qtconfig command.

     * Html help browser: this will let you chose your preferred browser
       which will be started from the Help menu to read the user manual. You
       can enter a simple name if the command is in your PATH, or browse for
       a full pathname.

     * Show document type icons in result list: icons in the result list can
       be turned off. They take quite a lot of space and convey relatively
       little useful information.

     * Auto-start simple search on whitespace entry: if this is checked, a
       search will be executed each time you enter a space in the simple
       search input field. This lets you look at the result list as you enter
       new terms. This is off by default, you may like it or not...

   Search parameters:

     * Stemming language: stemming obviously depends on the document's
       language. This listbox will let you chose among the stemming databases
       which were built during indexing (this is set in the main
       configuration file), or later added with recollindex -s (See the
       recollindex manual). Stemming languages which are dynamically added
       will be deleted at the next indexing pass unless they are also added
       in the configuration file.

     * Dynamically build abstracts: this decides if Recoll tries to build
       document abstracts when displaying the result list. Abstracts are
       constructed by taking context from the document information, around
       the search terms. This can slow down result list display significantly
       for big documents, and you may want to turn it off.

     * Replace abstracts from documents: this decides if we should synthetize
       and display an abstract in place of an explicit abstract found within
       the document itself.

     * Synthetic abstract size: adjust to taste...

     * Synthetic abstract context words: how many words should be displayed
       around each term occurrence.

   External indexes: This panel will let you browse for additional indexes
   that you may want to search. External indexes are designated by their
   database directory (ie: /home/someothergui/.recoll/xapiandb,
   /usr/local/recollglobal/xapiandb).

   Once entered, the indexes will appear in the All indexes list, and you can
   chose which ones you want to use at any moment by tranferring them to/from
   the Active indexes list.

   Your main database (the one the current configuration indexes to), is
   always implicitely active. If this is not desirable, you can set up your
   configuration so that it indexes, for example, an empty directory.

     ----------------------------------------------------------------------

                            Chapter 4. Installation

4.1. Installing a prebuilt copy

   Recoll binary installations are always linked statically to the xapian
   libraries, and have no other dependencies. You will only have to check or
   install supporting applications for the file types that you want to index
   beyond text, html and mail files.

     ----------------------------------------------------------------------

  4.1.1. Installing through a package system

   If you use a BSD-type port system or a prebuilt package (RPM or other),
   just follow the usual procedure, and maybe have a look at the
   configuration section (but this may not be necessary for a quick test with
   default parameters).

     ----------------------------------------------------------------------

  4.1.2. Installing a prebuilt Recoll

   The unpackaged binary versions are just compressed tar files of a build
   tree, where only the useful parts were kept (executables and sample
   configuration).

   The executable binary files are built with a static link to libxapian and
   libiconv, to make installation easier (no dependencies). However, this
   also means that you cannot change the versions which are used.

   After extracting the tar file, you can proceed with installation as if you
   had built the package from source (that is, just type make install). The
   binary trees are built for installation to /usr/local.

   You may then need to install external applications to process some file
   types that you want indexed (ie: acrobat, postscript ...). See next
   section.

   Finally, you may want to have a look at the configuration section.

     ----------------------------------------------------------------------

4.2. Packages needed for external file types

   Recoll uses external applications to index some file types. You need to
   install them for the file types that you wish to have indexed (these are
   run-time dependencies. None is needed for building Recoll):

     * PDF: pdftotext is part of the Xpdf package.

     * Postscript: pstotext.

     * MS Word: antiword.

     * MS Excel and PowerPoint: catdoc.

     * RTF: unrtf

     * dvi: dvips

     * djvu: DjVuLibre

     * MP3: Recoll will use the id3info command from the id3lib package to
       extract tag information. Without it, only the filenames will be
       indexed.

   Text, Html, mail folders and Openoffice files are processed internally.

     ----------------------------------------------------------------------

4.3. Building from source

  4.3.1. Prerequisites

   At the very least, you will need to download and install the xapian core
   package (Recoll development currently uses version 0.9.5), and the qt
   runtime and development packages (Recoll development currently uses
   version 3.3.5, but any 3.3 version is probably ok).

   You will most probably be able to find a binary package for qt for your
   system. You may have to compile Xapian but this is not difficult (if you
   are using FreeBSD, there is a port).

   You may also need libiconv. Recoll currently uses version 1.9 (this should
   not be critical). On Linux systems, the iconv interface is part of libc
   and you should not need to do anything special.

     ----------------------------------------------------------------------

  4.3.2. Building

   Recoll has been built on Linux (redhat7.3, mandriva 2005, Fedora Core 3),
   FreeBSD and Solaris 8. If you build on another system, I would very much
   welcome patches.

   Depending on the qt configuration on your system, you may have to set the
   QTDIR and QMAKESPECS variables in your environment:

     * QTDIR should point to the directory above the one that holds the qt
       include files (ie: qt.h).

     * QMAKESPECS should be set to the name of one of the qt mkspecs
       subdirectories (ie: linux-g++).

   On many Linux systems, QTDIR is set by the login scripts, and QMAKESPECS
   is not needed because there is a default link in mkspecs/.

   The Recoll configure script does a better job of checking these variables
   after release 1.1.1. Before this, unexplained errors will occur during
   compilation if the environment is not set up. Also, for 1.1.0 the qmake
   command should be in your PATH (later releases can also find it in
   $QTDIR/bin).

   Normal procedure:

         cd recoll-xxx
         configure
         make
         (practises usual hardship-repelling invocations)
     

   There little autoconfiguration. The configure script will mainly link one
   of the system-specific files in the mk directory to mk/sysconf. If your
   system is not known yet, it will tell you as much, and you may want to
   manually copy and modify one of the existing files (the new file name
   should be the output of uname -s).

     ----------------------------------------------------------------------

  4.3.3. Installation

   Either type make install or execute recollinstall prefix, in the root of
   the source tree. This will copy the commands to prefix/bin and the sample
   configuration files, scripts and other shared data to prefix/share/recoll.

   If the installation prefix given to recollinstall is different from what
   was specified when executing configure, you will have to set the
   RECOLL_DATADIR environment variable to indicate where the shared data is
   to be found.

   You can then proceed to configuration.

     ----------------------------------------------------------------------

4.4. Configuration overview

   There are two sets of configuration files. The system-wide files are kept
   in a directory named like /usr/[local/]share/recoll/examples, they define
   default values for the system. A parallel set of files exists by default
   in the .recoll directory in your home. This directory can be changed with
   the RECOLL_CONFDIR environment variable or the -c option parameter to
   recoll and recollindex.

   If the .recoll directory does not exist when recoll or recollindex are
   started, it will be created with a set of empty configuration files.
   recoll will give you a chance to edit the configuration file before
   starting indexing. recollindex will proceed immediately.

   Most of the parameters specific to the recoll GUI are set through the
   Preferences menu and stored in the standard QT place ($HOME/.qt/recollrc).
   You probably do not want to edit this by hand.

   For other options, Recoll uses text configuration files. You will have to
   edit them by hand for now (there is still some hope for a GUI
   configuration tool in the future). The most accurate documentation for the
   configuration parameters is given by comments inside the default files,
   and we will just give a general overview here.

   All configuration files share the same format. For exemple, a short
   extract of the main configuration file might look as follows:

         # Space-separated list of directories to index.
         topdirs =  ~/docs /usr/share/doc

         [~/somedirectory-with-utf8-txt-files]
         defaultcharset = utf-8
       

   There are three kinds of lines:

     * Comment (starts with #) or empty.

     * Parameter affectation (name = value).

     * Section definition ([somedirname]).

   Section lines allow redefining some parameters for a directory subtree.
   Some of the parameters used for indexing are looked up hierarchically from
   the more to the less specific. Not all parameters can be meaningfully
   redefined, this is specified for each in the next section.

   The tilde character (~) is expanded in file names to the name of the
   user's home directory.

   White space is used for separation inside lists. Elements with embedded
   spaces can be quoted using double-quotes.

     ----------------------------------------------------------------------

  4.4.1. Main configuration file

   recoll.conf is the main configuration file. It defines things like what to
   index (top directories and things to ignore), and the default character
   set to use for document types which do not specify it internally.

   The default configuration will index your home directory. If this is not
   appropriate, start recoll to create a blank configuration, click Cancel,
   and edit the configuration file before restarting the command. This will
   start the initial indexing, which may take some time.

   Paramers:

   topdirs

           Specifies the list of directories or files to index (recursively
           for directories). The indexer will not follow symbolic links
           inside the indexed trees. If an entry in the topdirs list is a
           symbolic link, indexing will not start and will generate an error.

   dbdir

           The name of the Xapian data directory. It will be created if
           needed when the index is initialized. If this is not an absolute
           path, it will be interpreted relative to the configuration
           directory.

   skippedNames

           A space-separated list of patterns for names of files or
           directories that should be completely ignored. The list defined in
           the default file is:

 *~ #* bin CVS  Cache caughtspam  tmp

           The list can be redefined for subdirectories, but is only actually
           changed for the top level ones in topdirs.

           The top-level directories are not affected by this list (that is,
           a directory in topdirs might match and would still be indexed).

           The list in the default configuration does not exclude hidden
           directories (names beginning with a dot), which means that it may
           index quite a few things that you do not want. On the other hand,
           mail user agents like thunderbird usually store messages in hidden
           directories, and you probably want this indexed. One possible
           solution is to have .* in skippedNames, and add things like
           ~/.thunderbird or ~/.evolution in topdirs.

   loglevel

           Verbosity level for recoll and recollindex. A value of 4 lists
           quite a lot of debug/information messages. 2 only lists errors.

   logfilename

           Where the messages should go. 'stderr' can be used as a special
           value, and is the default.

   filtersdir

           A directory to search for the external filter scripts used to
           index some types of files. The value should not be changed, except
           if you want to modify one of the default scripts. The value can be
           redefined for any subdirectory.

   indexstemminglanguages

           A list of languages for which the stem expansion databases will be
           built. See recollindex(1) for possible values. You can add a stem
           expansion database for a different language by using recollindex
           -s, but it will be deleted during the next indexing. Only
           languages listed in the configuration file are permanent.

   defaultcharset

           The name of the character set used for files that do not contain a
           character set definition (ie: plain text files). This can be
           redefined for any subdirectory. If it is not set at all, the
           character set used is the one defined by the nls environment
           (LC_ALL, LC_CTYPE, LANG), or iso8859-1 if nothing is set.

   guesscharset

           Decide if we try to guess the character set of files if no
           internal value is available (ie: for plain text files). This does
           not work well in general, and should probably not be used.

   usesystemfilecommand

           Decide if we use the file -i system command as a final step for
           determining the mime type for a file (the main procedure uses
           suffix associations as defined in the mimemap file). This can be
           useful for files with suffixless names, but it will also cause the
           indexing of many bogus "text" files.

   indexallfilenames

           Recoll indexes file names in a special section of the database to
           allow specific file names searches using wild cards. This
           parameter decides if file name indexing is performed only for
           files with mime types that would qualify them for full text
           indexing, or for all files inside the selected subtrees,
           independant of mime type.

   idxabsmlen

           Recoll stores an abstract for each indexed file inside the
           database. This is so that they can be displayed inside the result
           lists without decoding the original file. This parameter defines
           the size of the stored abstract (which can come from an actual
           section or just be the beginning of the text). The default value
           is 250.

   iconsdir

           The name of the directory where recoll result list icons are
           stored. You can change this if you want different images.

     ----------------------------------------------------------------------

  4.4.2. The mimemap file

   mimemap specifies the file name extension to mime type mappings.

   For file names without an extension, or with an unknown one, the system's
   file -i command will be executed to determine the mime type (this can be
   switched off inside the main configuration file).

   The mappings can be specified on a per-subtree basis, which may be useful
   in some cases. Example: gaim logs have a .txt extension but should be
   handled specially, which is possible because they are usually all located
   in one place.

   mimemap also has a recoll_noindex variable which is a list of suffixes.
   Matching files will be skipped (avoids unnecessary decompressions or file
   executions). This is partially redundant with skippedNames in the main
   configuration file, with two differences: it will not affect directories,
   and it can be changed for any subdirectory.

     ----------------------------------------------------------------------

  4.4.3. The mimeconf file

   mimeconf specifies how the different mime types are handled for indexing,
   and for display.

   Changing the indexing parameters is probably not a good idea except if you
   are a Recoll developper.

   You may want to adjust the external viewers defined in (ie: html is either
   previewed internally or displayed using firefox, but you may prefer
   mozilla, your openoffice.org program might be named oofice instead of
   openoffice ...). Look for the [view] section.

   You can also change the icons which are displayed by recoll in the result
   lists (the values are the basenames of the png images inside the iconsdir
   directory (specified in recoll.conf).

     ----------------------------------------------------------------------
